using System;
using System.Threading.Tasks;
using FaucetCollector.Script;
using OpenQA.Selenium;

public class bigbtcwinBTCcript : FaucetScript
{
    
    public override FaucetSettings Settings
    {
        get
        {
            return new FaucetSettings("http://bigbtc.win/faucet")
            {
                 new FaucetSetting() {
                    Name = "BTC",
                    Display = "FaucetHub linked BTC wallet address",
                    Type = EditorType.Wallet,
                    Required = true,
                    Default = null
                },
                 new FaucetSetting()
                 {
                     Name="bonus",
                     Display="Claim Bonus link",
                     Type=EditorType.CheckBox,
                     Default=true,
                
                 },
                 new FaucetSetting()
                 {
                     Name="Aw",
                     Display="Auto Withdraw",
                     Type=EditorType.CheckBox,
                     Default=false,
                 }
            };
        }
    }

    
    public override void Start()
    {
        
        Title = "BIG BTC WIN|adf|URLs|url|";

        SuccessXPath = "//p[contains(@class,'alert-success pulse')]";
        FailXPath = "//div[contains(@class,'alert-error')]";

        //Let Faucet Collector start up everything
        base.Start();
    }

    
    public override bool IsLoggedIn()
    {
        
        
        return IsVisible(ElementByXPath("//a[@href='/functions/logout.php']"));
    }

    
    public override int BeforeLogin()
    {
       

        return base.BeforeLogin();
    }

   
    public override int DoLogin()
    {
       
        var addressInput = ElementByName("address");
        if (addressInput == null)
        {
            
            return Fail("BTC address input not found.");
        }

        
        SetText(addressInput, GetSetting("BTC"));

        
        var enterButton = ElementByXPath("//input[@type='submit']");
        if (!IsVisible(enterButton))
        {
            
            return Fail("enter button not found.");
        }

        
        Click(enterButton);

        
        return base.DoLogin();
    }
    public bool doShortLink(string url)
    {

        bool iscorrect = true;
        DateTime t1;
        int cont = 0;
        bool bypassed = false;
        string url_a = Driver.Url;

        do
        {
            Title += "|" + Driver.Title;
            Wait();
            try
            {
                int cont2 = 0;
                while (true)
                {
                    Driver.SwitchTo().Frame(cont2);
                    var b_deny = ElementById("B1");
                    if (IsVisible(b_deny))
                    {
                        Click(b_deny);
                        Wait(1);
                    }

                    cont2++;
                    Driver.SwitchTo().DefaultContent();
                }
            }
            catch (Exception)
            {
                Driver.SwitchTo().DefaultContent();
            }
            Wait();
            if (Driver.Url.Contains("dwindly.io"))
            {
                Wait();
                var but = Driver.FindElement(By.Id("btd1"));
                Click(but);
                Wait(12);
                var but2 = Driver.FindElement(By.Id("btd"));

                Click(but);

            }
            else if (Driver.Url.Contains("faucetcrypto.com/faucet/short/"))
            {

                while (IsVisible(ElementByXPath("//a[@class='btn btn-accent btn-block disabled waves-effect waves-light']")) && !IsVisible(ElementByXPath("//a[@class='btn btn-accent btn-block waves-effect waves-light']")))
                {
                    Wait();
                }
                Wait();
                var button = ElementByXPath("//a[@class='btn btn-accent btn-block waves-effect waves-light']");
                Click(button);
            }
            else if (Driver.Url.Contains("linkshrink.net"))
            {
                Wait();
                var button = ElementByXPath("//a[@id='btd']");
                while (!button.Enabled)
                {
                    Wait();
                }
                CheckForPopupsEnabled = false;
                Click(button, false);
                Wait();
                Driver.SwitchTo().Window(Driver.WindowHandles[0]);
                CheckForPopupsEnabled = true;
                CheckForPopups();
            }
            else if (Driver.Url.Contains("zap.in"))
            {
                ExecuteScript("var v = document.getElementsByClassName('btn btn-primary'); v[0].click();");
                var result = SolveCaptcha();

                Wait(5);
                ExecuteScript("var v = document.getElementsByClassName('btn btn-primary'); v[1].click();");


            }
            else
            {

                bool clicked = false;
                Wait();
                var button = ElementById("invisibleCaptchaShortlink");
                if (IsVisible(button))
                {
                    var img = ElementById("adcopy-outer-captchaShortlink");
                    var text = ElementById("adcopy_response-captchaShortlink");
                    if (img != null && text != null)
                    {
                        var result = DoSolveImageCaptcha(img, text);
                    }
                    else
                    {
                        var result = SolveCaptcha();
                        try
                        {
                            ExecuteScript("try{window.grecaptcha.getResponse = function(nr) { return '" + Context.CaptchaResult.Result + "'; }}catch(Exception){};");
                        }
                        catch (Exception)
                        {

                        }
                    }
                    Wait(2, 3);
                    button = ElementById("invisibleCaptchaShortlink");
                    if (button.Enabled == true)
                    {
                        button = ElementById("invisibleCaptchaShortlink");
                        Click(button);
                        clicked = true;
                        Wait();
                    }
                    else
                    {
                        ExecuteScript("var but=document.getElementById(\"invisibleCaptchaShortlink\");but.outerHTML=but.outerHTML.replace('disabled=\"disabled\"','');");
                        Wait(3);
                        button = ElementById("invisibleCaptchaShortlink");
                        Click(button);
                        clicked = true;


                    }
                }
                else
                {
                    var button_2 = Driver.FindElements(By.TagName("button"));
                    foreach (var _button_2 in button_2)
                    {
                        if (_button_2.Text.ToLower().Contains("continue"))
                        {
                            if (_button_2.Enabled == true)
                            {
                                Click(_button_2);
                                clicked = true;
                                Wait();
                                break;
                            }
                            else
                            {
                                ExecuteScript("var but=document.getElementsByTagName('button');for(i=0;i<but.length;i++){if(but[i].outerHTML.search('continue')!=-1){but[i].outerHTML=but[i].outerHTML.replace('disabled=\"disabled\"','');break;}}");
                                Wait(3);
                                Click(_button_2);
                                clicked = true;
                                break;
                            }
                        }
                    }

                }
                if (!clicked)
                {
                    var but = ElementById("btn1");
                    if (IsVisible(but))
                    {
                        Click(but);
                        Wait();
                        var img = ElementById("adcopy-outer-captchaShortlink");
                        var text = ElementById("adcopy_response-captchaShortlink");
                        if (img != null && text != null)
                        {
                            var result = DoSolveImageCaptcha(img, text);
                        }
                        else
                        {
                            var result = SolveCaptcha();
                            try
                            {
                                ExecuteScript("try{window.grecaptcha.getResponse = function(nr) { return '" + Context.CaptchaResult.Result + "'; }}catch(Exception){};");
                            }
                            catch (Exception)
                            {

                            }
                        }
                        Wait();
                        var but1 = ElementByXPath("//a[@class='btn btn-primary']");
                        Wait();
                        Click(but1);
                        var button_p = ElementByXPath("//button[@id='btn2']");
                        t1 = DateTime.Now.AddMinutes(1);
                        while (!button_p.Enabled)
                        {
                            button_p = ElementByXPath("//button[@id='btn2']");
                            Wait();
                            if (DateTime.Now > t1)
                            {
                                break;
                            }
                        }
                        Click(button_p);
                        clicked = true;
                        Wait();

                    }

                }
                if (!clicked)
                {
                    Wait();
                    if (IsVisible(ElementByXPath("//div[@id='pause']")) || IsVisible(ElementById("btd1")))
                    {


                        var but = ElementById("btd1");
                        t1 = DateTime.Now.AddMinutes(1);
                        while (!IsVisible(but))
                        {
                            Wait();
                            but = ElementById("btd1");
                            if (DateTime.Now > t1)
                            {
                                break;
                            }
                        }

                        Click(but);
                        clicked = true;

                    }
                }
                if (!clicked)
                {
                    if (ElementByXPath("//*[contains(@src,'google.com/recaptcha')]") != null)
                    {

                        DoSolveCaptcha();
                        Wait(2, 3);
                        ExecuteScript("___grecaptcha_cfg.clients[0].aa.l.callback('" + Context.CaptchaResult.Result + "');");
                        Wait();
                        clicked = true;
                    }


                }

                ///// CLICK FIRST BUTTON FINISHED
                if (clicked)
                {
                    bool clicked_2 = false;
                    var button_skip = ElementByXPath("//a[@class='btn btn-success btn-lg get-link']");
                    if (IsVisible(ElementByXPath("//a[@class='btn btn-success btn-lg get-link disabled']")) || IsVisible(ElementByXPath("//a[@class='btn btn-success btn-lg get-link']")))
                    {
                        t1 = DateTime.Now.AddMinutes(1);
                        while (button_skip == null)
                        {
                            Wait();
                            button_skip = ElementByXPath("//a[@class='btn btn-success btn-lg get-link']");
                            if (DateTime.Now > t1)
                            {
                                break;
                            }
                        }
                        Click(button_skip);
                        clicked_2 = true;
                    }

                    if (!clicked_2)
                    {
                        if (IsVisible(ElementByXPath("//div[@class='skip-ad']")) || IsVisible(ElementByXPath("//a[@class='btn']")))
                        {
                            var button_skip_a = ElementByXPath("//a[@class='btn']");
                            t1 = DateTime.Now.AddMinutes(1);
                            while (button_skip_a == null)
                            {
                                Wait();
                                button_skip_a = ElementByXPath("//a[@class='btn']");
                                if (DateTime.Now > t1)
                                {
                                    break;
                                }
                            }
                            Click(button_skip_a);
                            clicked_2 = true;
                        }

                    }
                    if (!clicked_2)
                    {
                        if (IsVisible(ElementByXPath("//a[@class='btn btn-success get-link disabled']")) || IsVisible(ElementByXPath("//a[@class='btn btn-success get-link']")))
                        {
                            var button_skip_a = ElementByXPath("//a[@class='btn btn-success get-link']");
                            t1 = DateTime.Now.AddMinutes(1);
                            while (button_skip_a == null)
                            {
                                Wait();
                                button_skip_a = ElementByXPath("//a[@class='btn btn-success get-link']");
                                if (DateTime.Now > t1)
                                {
                                    break;
                                }
                            }
                            Click(button_skip_a);
                            clicked_2 = true;
                        }
                    }
                    if (!clicked_2)
                    {
                        if (IsVisible(ElementByXPath("//a[@class='btn btn-primary btn-goo get-link disabled']")) || IsVisible(ElementByXPath("//a[@class='btn btn-primary btn-goo get-link']")))
                        {
                            var button_skip_a = ElementByXPath("//a[@class='btn btn-primary btn-goo get-link']");
                            t1 = DateTime.Now;
                            while (!IsVisible(button_skip_a))
                            {
                                Wait();
                                button_skip_a = ElementByXPath("//a[@class='btn btn-primary btn-goo get-link']");
                                if (DateTime.Now > t1)
                                {
                                    break;
                                }
                            }
                            try
                            {
                                button_skip_a.Click();
                                try
                                {
                                    Driver.SwitchTo().Alert().Accept();
                                }
                                catch (Exception)
                                {

                                }
                            }
                            catch (Exception)
                            {
                                Click(button_skip_a);
                            }
                            clicked_2 = true;
                        }
                    }
                    if (!clicked_2)
                    {
                        if (ElementByXPath("//a[@id='btn2']") != null)
                        {
                            var button_skip_a = ElementByXPath("//a[@id='btn2']");
                            t1 = DateTime.Now.AddMinutes(1);
                            while (!button_skip_a.Enabled)
                            {
                                Wait();
                                button_skip_a = ElementByXPath("//a[@id='btn2']");
                                if (DateTime.Now > t1)
                                {
                                    break;
                                }
                            }
                            Click(button_skip_a);
                            clicked_2 = true;
                        }
                    }
                    if (!clicked_2)
                    {
                        if (IsVisible(ElementByXPath("//a[@class='getlinkbtn get-link disabled']")) || IsVisible(ElementByXPath("/a[@class='getlinkbtn get-link']")))
                        {
                            var button_skip_a = ElementByXPath("/a[@class='getlinkbtn get-link']");
                            while (button_skip_a == null)
                            {
                                Wait();
                                button_skip_a = ElementByXPath("/a[@class='getlinkbtn get-link']");
                            }
                            Click(button_skip_a);
                            clicked_2 = true;

                        }
                    }
                    if (!clicked_2)
                    {
                        if (IsVisible(ElementByXPath("//a[@class='btn btn-material get-link']")) || IsVisible(ElementByXPath("//a[@class='btn btn-material get-link disabled']")))
                        {
                            var button_wait = ElementByXPath("//a[@class='btn btn-material get-link disabled']");
                            var button_n = ElementByXPath("//a[@class='btn btn-material get-link']");
                            DateTime t12 = DateTime.Now.AddMinutes(1);
                            while (IsVisible(button_wait) && !IsVisible(button_n))
                            {
                                Wait();
                                button_wait = ElementByXPath("//a[@class='btn btn-material get-link disabled']");
                                button_n = ElementByXPath("//a[@class='btn btn-material get-link']");
                                if (DateTime.Now > t12)
                                {
                                    break;
                                }

                            }
                            Wait();
                            button_n = ElementByXPath("//a[@class='btn btn-material get-link']");
                            Click(button_n);
                            Wait();
                            clicked_2 = true;
                        }

                    }

                }
            }
            try
            {
                Driver.SwitchTo().Alert().Accept();
            }
            catch (Exception)
            {

            }

            if (Driver.Url.Contains(url))
            {
                bypassed = true;

                Wait(3, 4);
            }
            else
            {
                bypassed = false;
                if (Driver.Url.Contains(url_a))
                {
                    Driver.Navigate().Refresh();

                }
                else
                {
                    GoToUrl(url_a);
                }

            }
            if (cont >= 3)
            {
                if (Driver.Url.Contains(url))
                {
                    iscorrect = true;
                }
                else
                {
                    iscorrect = false;
                }

                break;
            }
            cont++;

        } while (!bypassed);
        return iscorrect;


    }

    public override int AfterLogin()
    {
        
        return base.AfterLogin();
    }

   
    public override int GetFaucetWaitTime()
    {
          
      var waitElement = ElementByXPath("//span[@id='countdown']");
        if (!IsVisible(waitElement))
        {
            //no time remaining element, so we are good to go.
            return 0;
        }

        var waitText = waitElement.Text.ToLower().Trim().Replace("you can claim again in ", "").Replace(" seconds.", "").Trim();
        int seconds;
        if (!int.TryParse(waitText, out seconds))
        {
            return Fail("Unable to get the remaining time from text '" + waitText + "'.");
        }

        return seconds;
    }
   
    public override int BeforeSolveCaptcha()
    {
        
        return base.BeforeSolveCaptcha();
    }

   
     public override int DoSolveCaptcha()
    {
        
        var extraCaptcha = ElementByXPath("//*[@src='/securimage/securimage_show.php']");
        var extraInput = ElementByName("captcha_code");
        Task<int> extraTask = null;
        if (IsVisible(extraCaptcha) && IsVisible(extraInput))
        {

            extraTask = Task.Run(() =>
            {
                return DoSolveImageCaptcha(extraCaptcha, extraInput);
            });
        }

        
        var result = base.DoSolveCaptcha();

        
        if (extraTask != null)
        {
           
            extraTask.Wait();

            
            result += extraTask.Result;
        }

        
        return result;
    }


    
    public override int AfterSolveCaptcha()
    {
        
        return base.AfterSolveCaptcha();
    }

   
    public override int BeforeSolveFaucet()
    {
        if (GetBoolSetting("Aw"))
        {
            var w = ElementByXPath("//a[@id='account']");
            if (IsVisible(w))
            {
                if (w.Enabled == true)
                {
                    Click(w);
                    Wait(2, 3);
                    var w2 = ElementByXPath("//button[@id='withdraw']");
                    if (IsVisible(w2))
                    {
                        if (w2.Enabled == true)
                        {
                            Click(w2);
                            Wait(3);
                        }
                    }
                }
            }
        }
        if (GetBoolSetting("bonus"))
        {
            try
            {
                if (!Driver.Url.Contains("bigbtc.win/faucet"))
                {
                    GoToUrl("https://bigbtc.win/faucet");
                    Wait(2, 4);
                }
                var bonus = ElementByXPath("//a[@href='/bonus']");
                if (IsVisible(bonus))
                {
                    Wait(2);
                    Click(bonus);
                    Wait(5, 7);
                    var bonus2 = ElementByXPath("//b[contains(text(),'CLAIM YOUR BONUS')]");
                    if (IsVisible(bonus2))
                    {
                        Click(bonus2);

                        doShortLink("bigbtc");
                       
                        
                            GoToUrl("http://bigbtc.win/claimbonus");
                        
                
                        Wait();
                    }
                }
            }
            catch (Exception)
            {


            }
        }
        if (!Driver.Url.Contains("bigbtc.win/faucet"))
        {
            GoToUrl("https://bigbtc.win/faucet");
            Wait(2, 4);
        }
        return base.BeforeSolveFaucet();
    }

  
    public override int DoSolveFaucet()
    {
        
        var submitButton = ElementById("claimbtn");
        if (!IsVisible(submitButton))
        {
            
            return Fail("Get reward button not found or not visible.");
        }

        


        var result = SolveCaptcha();
        if (result > 0)
        {
            
            return result;
        }        


        
        Click(submitButton);

        
        return base.DoSolveFaucet();
    }

    
    public override int AfterSolveFaucet()
    {
        
        return base.AfterSolveFaucet();
    }

    
    public override int CheckFaucetResult()
    {
       
        var result = base.CheckFaucetResult();

        if (IsSuccess)
        {
  
            Reload = true;
        }

        return result;
    }
}